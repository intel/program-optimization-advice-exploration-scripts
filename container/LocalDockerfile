ARG IMG_NAME
FROM ${IMG_NAME}

LABEL description="Local CapeScripts" 

ARG LOCAL_UID
ARG LOCAL_GID
ARG LOCAL_GIDS
ARG LOCAL_GNAMES
ARG ENABLE_DEVELOPMENT
ARG SEP_DIR

# Use bash for more scripting features
SHELL ["/bin/bash", "-c"]

USER root
# Install more packages for experiments/local needs
# Uncomment follow line and add more packages
#RUN apt-get install -y libssl-dev
# Install sudo, netcat (git behind proxy) for development needs
RUN if [[ $ENABLE_DEVELOPMENT == 1 ]]; then apt-get install -y sudo netcat; fi
WORKDIR /root
# Copy in ssh tarball (could be empty if ENABLE_DEVELOPMENT != 1)
COPY ssh.tar.gz /root
RUN if [[ $ENABLE_DEVELOPMENT == 1 ]]; then tar xvfz ssh.tar.gz && chown -R root .ssh && chgrp -R root .ssh; fi


#RUN groupadd -g $LOCAL_GID runner 
RUN groupmod -g $LOCAL_GID qaas
# Create /tmp/groups to store the group names to add to runner
RUN echo -n "" > /tmp/groups
RUN LOCAL_GNAME_ARRAY=($LOCAL_GNAMES) \
    && LOCAL_GID_ARRAY=($LOCAL_GIDS) \
    && for index in ${!LOCAL_GID_ARRAY[@]}; do \
        if [[ ${LOCAL_GID_ARRAY[$index]} != $LOCAL_GID ]]; then \
          echo groupadd -g ${LOCAL_GID_ARRAY[$index]} ${LOCAL_GNAME_ARRAY[$index]}; \
          groupadd -g ${LOCAL_GID_ARRAY[$index]} ${LOCAL_GNAME_ARRAY[$index]}; \
          echo ${LOCAL_GNAME_ARRAY[$index]} >> /tmp/groups; \
        else \
          echo Skip ${LOCAL_GID_ARRAY[$index]}; \
        fi \
    done

#RUN getent group
#RUN useradd -l -m -d /home/runner -s /bin/bash -u $LOCAL_UID -g $LOCAL_GID -G sudo $LOCAL_GNAMES
# The tr command will output a trailing ',' being used to be a delimiter just before sudo
#RUN useradd -l -m -d /home/runner -s /bin/bash -u $LOCAL_UID -g runner -G $(tr '\n' ',' < /tmp/groups)sudo runner 
#RUN usermod -m -d /app/runner -s /bin/bash -u $LOCAL_UID -g qaas -G $(tr '\n' ',' < /tmp/groups)sudo qaas 
RUN usermod -m -d /home/qaas -s /bin/bash -u $LOCAL_UID -g qaas -G $(tr '\n' ',' < /tmp/groups)sudo qaas 

RUN echo "qaas:qaas" | chpasswd

RUN chgrp -R qaas /home/qaas
#RUN chown -R runner /share/* && chgrp -R runner /share/*

USER qaas
WORKDIR /app/runner
ENV USER=qaas
ENV ICE_CMPOPTS_PATH=/share/uiuc-compiler-opts/install

#USER root
#ENTRYPOINT /opt/intel/sep/sepdk/src/insmod-sep -g docker && su runner && /opt/intel/sep/sepdk/src/rmmod-sep
